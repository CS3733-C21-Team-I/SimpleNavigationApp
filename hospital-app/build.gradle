plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.27.1'
    id "io.freefair.lombok" version "5.0.0-rc6"
}
mainClassName = 'edu.wpi.cs3733.c21.teamI.Main'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://apisite.crmyers.dev/maven'
    }
}

dependencies {
    implementation(
            'com.jfoenix:jfoenix:8.0.10',
            'com.opencsv:opencsv:4.0',
            //Google Maps required
            'com.google.maps:google-maps-services:0.17.0',
            'org.slf4j:slf4j-simple:1.7.25',
            // You may comment out the database dependency you do not use
            'org.xerial:sqlite-jdbc:3.30.1',
            'org.apache.derby:derby:10.14.2.0',
            'org.apache.derby:derbynet:10.14.2.0',
            'org.apache.derby:derbyclient:10.14.2.0',
            'org.slf4j:slf4j-api:1.7.30',
            'org.slf4j:slf4j-simple:1.7.30',
    )
    compile group: 'org.apache.derby', name: 'derby', version: '10.14.2.0'
    compile group: 'org.apache.derby', name: 'derbynet', version: '10.14.2.0'
    compile group: 'org.apache.derby', name: 'derbyclient', version: '10.14.2.0'
    compile group: 'com.jfoenix', name: 'jfoenix', version:'8.0.10'
    testCompile(
            "org.testfx:testfx-core:4.0.16-alpha",
            'org.junit.jupiter:junit-jupiter:5.6.0',
            'org.testfx:testfx-junit5:4.0.16-alpha',
    )
}


test {
    useJUnitPlatform()
}

jar {
    manifest {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
        attributes 'Main-Class': mainClassName,
                'Class-Path': configurations.runtime.files.collect { "$it.name"}.join(' ')

    }
    from configurations.runtime.collect { zipTree(it) }
}

def codeCoverageExcludes = [
        'edu.wpi.cs3733.c21.teamI.App',
        'edu.wpi.cs3733.c21.teamI.Main',
]

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            excludes = codeCoverageExcludes
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = codeCoverageExcludes
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = codeCoverageExcludes
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport
compileJava.dependsOn 'spotlessApply'

spotless {
    java {
        googleJavaFormat()
    }
}
